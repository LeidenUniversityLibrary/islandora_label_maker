<?php

/**
 * @file
 * islandora_label_maker.module
 *
 *
 *  Copyright 2018 Leiden University Library
 *
 *  This file is part of islandora_label_maker.
 *
 *  islandora_label_maker is free software: you can redistribute it and/or modify
 *  it under the terms of the GNU General Public License as published by
 *  the Free Software Foundation, either version 3 of the License, or
 *  (at your option) any later version.
 *
 *  This program is distributed in the hope that it will be useful,
 *  but WITHOUT ANY WARRANTY; without even the implied warranty of
 *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 *  GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License
 *  along with this program.  If not, see <http://www.gnu.org/licenses/>.
 *
 */

// Permissions.
define('ISLANDORA_LABEL_MAKER_ADMIN_PERMISSION', 'Islandora label maker admin permission');

/**
 * Implements hook_menu().
 */
function islandora_label_maker_menu() {
  return array(
    'admin/islandora/tools/islandora_label_maker' => array(
      'title' => 'Islandora Label Maker',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('islandora_label_maker_admin_form'),
      'file' => 'includes/admin.form.inc',
      'access arguments' => array(ISLANDORA_LABEL_MAKER_ADMIN_PERMISSION),
    ),
  );
}

/**
 * Implements hook_permission().
 */
function islandora_label_maker_permission() {
  return array(
    ISLANDORA_LABEL_MAKER_ADMIN_PERMISSION => array(
      'title' => t('Administer configuration'),
    ),
  );
}

/**
 * Implements hook_theme().
 */
function islandora_label_maker_theme($existing, $type, $theme, $path) {
  return array(
    'islandora_label_maker_config_table_drag_components' => array(
      'render element' => 'element',
      'file' => 'theme/theme.inc',
    ),
  );
}

/**
 * Implements hook_form_alter().
 */
function islandora_label_maker_form_islandora_object_properties_form_alter(&$form, &$form_state, $form_id) {
  $form['admin']['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Generate new label'),
    '#submit' => array('islandora_label_maker_generate_label_submit'),
  );
}

function islandora_label_maker_generate_label_submit(array $form, array &$form_state) {
  module_load_include('inc', 'islandora_label_maker', 'includes/utilities');
  islandora_label_maker_generate_label_for_object_id($form_state['object']->id);
}

/**
 * Implements hook_islandora_datastream_ingested().
 */
function islandora_label_maker_islandora_datastream_ingested(AbstractObject $object, AbstractDatastream $datastream) {
  module_load_include('inc', 'islandora_label_maker', 'includes/utilities');
  islandora_label_maker_add_to_label_queue($object, $datastream);
}

/**
 * Implements hook_islandora_datastream_modified().
 */
function islandora_label_maker_islandora_datastream_modified(AbstractObject $object, AbstractDatastream $datastream) {
  module_load_include('inc', 'islandora_label_maker', 'includes/utilities');
  islandora_label_maker_add_to_label_queue($object, $datastream);
}

/*
* Implements hook_cron_queue_info().
*/
function islandora_label_maker_cron_queue_info() {
 $queues['islandora_label_maker_queue'] = array(
    'worker callback' => 'islandora_label_maker_generate_label_worker',
    'time' => 60,
 );
 return $queues;
}

function islandora_label_maker_generate_label_worker($data) {
  module_load_include('inc', 'islandora_label_maker', 'includes/utilities');
  $pid = $data['object_id'];
  $solrquery = "PID:\"$id\"";
  $solrobj = islandora_label_maker_object_for_solr_query($solrquery);
  if ($solrdoc == null || $solrobj['solrdoc']['timestamp'] < $data['timestamp']) {
    throw new Exception("Cannot update label of object $id, because Solr not up-to-date yet");
  }
  islandora_label_maker_generate_label_for_object_id($data['object_id']);
}


